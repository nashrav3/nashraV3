generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["metrics", "clientExtensions"]
  binaryTargets   = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Chat {
  chatId       BigInt   @unique @map("chat_id")
  chatType     ChatType @map("chat_type")
  languageCode String?  @map("language_code")
  updatedAt    DateTime @updatedAt @map("updated_at")
  createdAt    DateTime @default(now()) @map("created_at")
  role         Role     @default(USER)
  posts        Post[]

  @@map("chats")
}

model Bot {
  botId     BigInt   @unique @map("bot_id")
  token     String   @unique
  username  String   @db.VarChar(255)
  firstName String   @default("bot_name") @map("first_name") @db.VarChar(255) //longest name for a bot in nashrabot db is 206
  posts     Post[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("bots")
}

model Post {
  postId      Int      @unique @default(autoincrement())
  Chat        Chat     @relation(fields: [chatId], references: [chatId])
  chatId      BigInt   @map("chat_id")
  bot         Bot      @relation(fields: [botId], references: [botId])
  botId       BigInt   @map("bot_id")
  text        String?  @db.VarChar(4096)
  entities    Json?
  replyMarkup Json?    @map("reply_markup")
  createdAt   DateTime @default(now()) @map("created_at")

  @@map("posts")
}

enum Role {
  USER
  ADMIN
  OWNER
}

enum ChatType {
  private
  group
  supergroup
  channel
}
